# https://unix.stackexchange.com/questions/13751/kernel-inotify-watch-limit-reached
#   Assuming you set the max at 524288 and all were used (improbable),
#   you'd be using approximately 256MB/512MB of 32-bit/64-bit kernel memory.
fs.inotify.max_user_watches=524288
fs.inotify.max_user_instances=1024

# RFC 1337 fix
net.ipv4.tcp_rfc1337=1
# turn on SYN-flood protections
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_synack_retries=5

# ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts=1

# enable source validation by reversed path, as specified in RFC1812
net.ipv4.conf.all.rp_filter=0

# stricter arp responses
net.ipv4.conf.all.arp_filter= 1

# universal local_port_range
net.ipv4.ip_local_port_range=32768 60999

# maximum number of open files/file descriptors
fs.file-max=8388606

# follow mellanox best practices https://community.mellanox.com/s/article/linux-sysctl-tuning
# the following changes are recommended for improving IPv4 traffic performance by Mellanox
# disable the TCP timestamps option for better CPU utilization
net.ipv4.tcp_timestamps=0

# enable the TCP selective acks option for better throughput
net.ipv4.tcp_sack=1

# increase the TCP maximum and default buffer sizes using setsockopt()
net.core.rmem_max=4194304
net.core.wmem_max=4194304
net.core.rmem_default=4194304
net.core.wmem_default=4194304
net.core.optmem_max=4194304

# increase memory thresholds to prevent packet dropping:
net.ipv4.tcp_rmem=4096 873 4194304
net.ipv4.tcp_wmem=4096 655 4194304

# enable low latency mode for TCP:
net.ipv4.tcp_low_latency=1

# the following variable is used to tell the kernel how much of the socket buffer
# space should be used for TCP window size, and how much to save for an application
# buffer. A value of 1 means the socket buffer will be divided evenly between.
# TCP windows size and application.
net.ipv4.tcp_adv_win_scale=1

# maximum number of incoming connections
net.core.somaxconn=65535

# maximum number of packets queued
net.core.netdev_max_backlog=10000

# queue length of completely established sockets waiting for accept
net.ipv4.tcp_max_syn_backlog=4096

# time to wait (seconds) for FIN packet
net.ipv4.tcp_fin_timeout=15

# disable icmp send redirects
net.ipv4.conf.all.send_redirects=0

# disable icmp accept redirect
net.ipv4.conf.all.accept_redirects=0

# drop packets with LSR or SSR
net.ipv4.conf.all.accept_source_route=0

# MTU discovery, only enable when ICMP blackhole detected
net.ipv4.tcp_mtu_probing=1
